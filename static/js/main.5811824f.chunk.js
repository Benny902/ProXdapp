(this["webpackJsonpdapp-dashboard"]=this["webpackJsonpdapp-dashboard"]||[]).push([[0],{331:function(e,t,n){},347:function(e,t){},350:function(e,t){},352:function(e,t){},356:function(e,t){},357:function(e,t){},381:function(e,t){},383:function(e,t){},398:function(e,t){},400:function(e,t){},414:function(e,t){},431:function(e,t){},433:function(e,t){},446:function(e,t){},447:function(e,t){},515:function(e,t){},521:function(e,t){},522:function(e,t){},772:function(e,t,n){},775:function(e,t,n){"use strict";n.r(t);var a=n(40),i=n(308),s=n.n(i),u=(n(331),n(0)),p=n(3),r=n(69),d=n(100),o=n.n(d),y=n(311),l=n.n(y),c=n(322),m=n(321),b=n.n(m),T=[{inputs:[{internalType:"string",name:"name_",type:"string"},{internalType:"string",name:"symbol_",type:"string"},{internalType:"uint256",name:"totalSupply_",type:"uint256"},{internalType:"address[4]",name:"addrs",type:"address[4]"},{internalType:"uint256[3]",name:"feeSettings",type:"uint256[3]"},{internalType:"uint256",name:"minimumTokenBalanceForDividends_",type:"uint256"},{internalType:"address",name:"serviceFeeReceiver_",type:"address"},{internalType:"uint256",name:"serviceFee_",type:"uint256"}],stateMutability:"payable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"bool",name:"isExcluded",type:"bool"}],name:"ExcludeFromFees",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address[]",name:"accounts",type:"address[]"},{indexed:!1,internalType:"bool",name:"isExcluded",type:"bool"}],name:"ExcludeMultipleAccountsFromFees",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"newValue",type:"uint256"},{indexed:!0,internalType:"uint256",name:"oldValue",type:"uint256"}],name:"GasForProcessingUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newLiquidityWallet",type:"address"},{indexed:!0,internalType:"address",name:"oldLiquidityWallet",type:"address"}],name:"LiquidityWalletUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"iterations",type:"uint256"},{indexed:!1,internalType:"uint256",name:"claims",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lastProcessedIndex",type:"uint256"},{indexed:!0,internalType:"bool",name:"automatic",type:"bool"},{indexed:!1,internalType:"uint256",name:"gas",type:"uint256"},{indexed:!0,internalType:"address",name:"processor",type:"address"}],name:"ProcessedDividendTracker",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"tokensSwapped",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"SendDividends",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pair",type:"address"},{indexed:!0,internalType:"bool",name:"value",type:"bool"}],name:"SetAutomatedMarketMakerPair",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"tokensSwapped",type:"uint256"},{indexed:!1,internalType:"uint256",name:"ethReceived",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokensIntoLiqudity",type:"uint256"}],name:"SwapAndLiquify",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"enum TokenType",name:"tokenType",type:"uint8"},{indexed:!1,internalType:"uint256",name:"version",type:"uint256"}],name:"TokenCreated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newAddress",type:"address"},{indexed:!0,internalType:"address",name:"oldAddress",type:"address"}],name:"UpdateDividendTracker",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newAddress",type:"address"},{indexed:!0,internalType:"address",name:"oldAddress",type:"address"}],name:"UpdateUniswapV2Router",type:"event"},{inputs:[],name:"VERSION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_marketingWalletAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"automatedMarketMakerPairs",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"dividendTokenBalanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"dividendTracker",outputs:[{internalType:"contract BABYTOKENDividendTracker",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"excludeFromDividends",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"bool",name:"excluded",type:"bool"}],name:"excludeFromFees",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"accounts",type:"address[]"},{internalType:"bool",name:"excluded",type:"bool"}],name:"excludeMultipleAccountsFromFees",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"gasForProcessing",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getAccountDividendsInfo",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"int256",name:"",type:"int256"},{internalType:"int256",name:"",type:"int256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"getAccountDividendsInfoAtIndex",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"int256",name:"",type:"int256"},{internalType:"int256",name:"",type:"int256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getClaimWait",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastProcessedIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMinimumTokenBalanceForDividends",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getNumberOfDividendTokenHolders",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTotalDividendsDistributed",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"isExcludedFromDividends",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"isExcludedFromFees",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"liquidityFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"marketingFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"gas",type:"uint256"}],name:"processDividendTracker",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"rewardToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"pair",type:"address"},{internalType:"bool",name:"value",type:"bool"}],name:"setAutomatedMarketMakerPair",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setLiquiditFee",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setMarketingFee",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address payable",name:"wallet",type:"address"}],name:"setMarketingWallet",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"setSwapTokensAtAmount",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setTokenRewardsFee",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"swapTokensAtAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"tokenRewardsFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalFees",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"uniswapV2Pair",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"uniswapV2Router",outputs:[{internalType:"contract IUniswapV2Router02",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"claimWait",type:"uint256"}],name:"updateClaimWait",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newAddress",type:"address"}],name:"updateDividendTracker",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newValue",type:"uint256"}],name:"updateGasForProcessing",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"updateMinimumTokenBalanceForDividends",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newAddress",type:"address"}],name:"updateUniswapV2Router",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"withdrawableDividendOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{stateMutability:"payable",type:"receive"}],f=(n(772),n(15)),x="0x9d9fA9DbAe391C3FB6866F43De62FF3B393133b2",v="0x007a86bb3a8649590e84013dc62900632a8ec89f",w="0x2170ed0880ac9a755fd29b2688956bd959f933f8",h={walletconnect:{package:c.a,display:{name:"WalletConnect",description:""},options:{rpc:{56:"https://bsc-dataseed.binance.org/"},network:"binance"}}},j=new l.a({cacheProvider:!0,providerOptions:h,theme:{background:"rgb(39, 49, 56)",main:"rgb(199, 199, 199)",secondary:"rgb(136, 136, 136)",border:"rgba(195, 195, 195, 0.14)",hover:"rgb(16, 26, 32)"}});var M=function(){var e=Object(a.useState)(null),t=Object(r.a)(e,2),n=t[0],i=t[1],s=Object(a.useState)(!1),d=Object(r.a)(s,2),y=d[0],l=d[1],c=Object(a.useState)(null),m=Object(r.a)(c,2),h=m[0],M=m[1],O=Object(a.useState)(null),g=Object(r.a)(O,2),k=g[0],F=g[1],D=Object(a.useState)(0),A=Object(r.a)(D,2),C=A[0],S=A[1],N=Object(a.useState)(0),P=Object(r.a)(N,2),R=P[0],U=P[1];function W(){return(W=Object(p.a)(Object(u.a)().mark((function e(){var t,n;return Object(u.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=new o.a(new o.a.providers.HttpProvider("https://bsc-dataseed1.binance.org/")),n=new t.eth.Contract(T,x),e.t0=M,e.next=5,n.methods.getTotalDividendsDistributed().call();case 5:return e.t1=e.sent,(0,e.t0)(e.t1),e.t2=F,e.next=10,n.methods.getAccountDividendsInfo(v).call();case 10:return e.t3=e.sent,(0,e.t2)(e.t3),e.t4=S,e.next=15,b.a.get("https://api.coingecko.com/api/v3/simple/token_price/binance-smart-chain?contract_addresses=".concat(w,"&vs_currencies=usd")).then((function(e){return e.data[w].usd}));case 15:e.t5=e.sent,(0,e.t4)(e.t5);case 17:case"end":return e.stop()}}),e)})))).apply(this,arguments)}var E=function(){var e=Object(p.a)(Object(u.a)().mark((function e(){return Object(u.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(y){e.next=22;break}return e.prev=1,e.next=4,j.connect();case 4:return n=e.sent,i(n),n.on("accountsChanged",(function(e){q()})),console.log("provider chain changed"),n.on("chainChanged",(function(e){q()})),console.log("provider network changed"),n.on("networkChanged",(function(e){q()})),l(!0),e.next=14,B();case 14:e.next=20;break;case 16:return e.prev=16,e.t0=e.catch(1),console.log("Could not get a wallet connection",e.t0),e.abrupt("return");case 20:e.next=25;break;case 22:return l(!y),e.next=25,_();case 25:case"end":return e.stop()}}),e,null,[[1,16]])})));return function(){return e.apply(this,arguments)}}();function I(){return(I=Object(p.a)(Object(u.a)().mark((function e(){var t,a,i;return Object(u.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if("undefined"!==typeof window.ethereum){e.next=4;break}console.log("Please install the MetaMask"),e.next=26;break;case 4:if(!y){e.next=25;break}return t=new o.a(n),e.next=8,t.eth.getChainId();case 8:if(56!==e.sent){e.next=22;break}return a=new t.eth.Contract(T,x),e.next=13,t.eth.getAccounts();case 13:return i=e.sent,e.next=16,a.methods.claim().send({from:i[0]});case 16:if(!e.sent){e.next=20;break}return e.next=20,B();case 20:e.next=23;break;case 22:console.log("Please select the Binance Smart Chain Network");case 23:e.next=26;break;case 25:console.log("Please connect wallet");case 26:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function B(){return V.apply(this,arguments)}function V(){return(V=Object(p.a)(Object(u.a)().mark((function e(){return Object(u.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return console.log("refreshAccountData"),e.next=3,q(n);case 3:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function _(){return L.apply(this,arguments)}function L(){return(L=Object(p.a)(Object(u.a)().mark((function e(){return Object(u.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!n.close){e.next=6;break}return e.next=3,n.close();case 3:return e.next=5,j.clearCachedProvider();case 5:i(null);case 6:l(!1),U(0);case 8:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function q(){return H.apply(this,arguments)}function H(){return(H=Object(p.a)(Object(u.a)().mark((function e(){var t,a,i;return Object(u.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=new o.a(n),e.next=3,t.eth.getChainId();case 3:if(56!==e.sent){e.next=16;break}return a=new t.eth.Contract(T,x),e.next=8,t.eth.getAccounts();case 8:return i=e.sent,e.t0=U,e.next=12,a.methods.getAccountDividendsInfo(i[0]).call();case 12:e.t1=e.sent,(0,e.t0)(e.t1),e.next=17;break;case 16:console.log("Please select the Binance Smart Chain Network");case 17:case"end":return e.stop()}}),e)})))).apply(this,arguments)}return Object(a.useEffect)((function(){!function(){W.apply(this,arguments)}()}),[]),Object(f.jsx)("div",{className:"App",children:Object(f.jsxs)("div",{className:"dashboard",children:[Object(f.jsx)("button",{onClick:function(){return E()},className:"connect",children:y?"Disconnect Wallet":"Connect Wallet"}),Object(f.jsxs)("div",{children:[Object(f.jsx)("p",{children:"Total Rewards Distributed:"}),Object(f.jsxs)("p",{children:[Number(h/Math.pow(10,18)).toFixed(2)," ETH"]})]}),Object(f.jsxs)("div",{children:[Object(f.jsx)("p",{children:"Total Rewards Distributed USD:"}),Object(f.jsxs)("p",{children:["~$ ",Number(h/Math.pow(10,18)*C).toFixed(2)]})]}),Object(f.jsx)("div",{className:"paragraph"}),Object(f.jsxs)("div",{children:[Object(f.jsx)("p",{children:"Total Rewards Distributed To XClub Wallet:"}),Object(f.jsx)("p",{children:k?Number(k[4]/Math.pow(10,18)).toFixed(2)+" ETH":""})]}),Object(f.jsxs)("div",{children:[Object(f.jsx)("p",{children:"Total Rewards Distributed To XClub Wallet USD:"}),Object(f.jsx)("p",{children:k?"~$ "+Number(k[4]/Math.pow(10,18)*C).toFixed(2):""})]}),Object(f.jsx)("div",{className:"paragraph"}),Object(f.jsxs)("div",{children:[Object(f.jsx)("p",{children:"Total Rewards Distributed To User Wallet:"}),Object(f.jsx)("p",{children:R?Number(R[4]/Math.pow(10,18)).toFixed(2)+" ETH":""})]}),Object(f.jsxs)("div",{children:[Object(f.jsx)("p",{children:"Total Rewards Distributed To User Wallet USD:"}),Object(f.jsx)("p",{children:R?"~$ "+Number(R[4]/Math.pow(10,18)*C).toFixed(2):""})]}),Object(f.jsxs)("div",{children:[Object(f.jsx)("p",{children:"User Dividend Claimable:"}),Object(f.jsx)("p",{children:R?Number(R[3]/Math.pow(10,18)).toFixed(2)+" ETH":""})]}),Object(f.jsxs)("div",{children:[Object(f.jsx)("p",{children:"User Dividend Claimable USD:"}),Object(f.jsx)("p",{children:R?"~$ "+Number(R[3]/Math.pow(10,18)*C).toFixed(2):""})]}),Object(f.jsxs)("button",{onClick:function(){return function(){return I.apply(this,arguments)}()},className:"claim",children:["Claim ",R?"~$ "+Number(R[3]/Math.pow(10,18)*C).toFixed(2):""]})]})})},O=function(e){e&&e instanceof Function&&n.e(3).then(n.bind(null,780)).then((function(t){var n=t.getCLS,a=t.getFID,i=t.getFCP,s=t.getLCP,u=t.getTTFB;n(e),a(e),i(e),s(e),u(e)}))};s.a.createRoot(document.getElementById("root")).render(Object(f.jsx)(M,{})),O()}},[[775,1,2]]]);
//# sourceMappingURL=main.5811824f.chunk.js.map